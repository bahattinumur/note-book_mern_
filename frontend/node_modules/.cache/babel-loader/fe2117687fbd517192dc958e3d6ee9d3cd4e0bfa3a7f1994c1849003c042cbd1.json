{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/fullstack_mern_notepad_app-main/frontend/src/pages/home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NotesDetail from \"../components/notes-detail\";\nimport NoteForm from \"../components/note-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [notlar, setNotlar] = useState(null);\n  const [noteError, setNoteError] = useState();\n\n  // Function to fetch notes\n  const fetchNotes = async () => {\n    try {\n      const response = await fetch(\"/api/v1/notes\");\n      const responseData = await response.json(); // Extract JSON data from response\n\n      if (response.ok) {\n        setNotlar(responseData.data); // Set notlar state with the data array\n      } else {\n        setNoteError(responseData.message || \"An error occurred while fetching notes.\");\n        setNotlar([]); // Set notlar to an empty array\n      }\n    } catch (err) {\n      console.error(\"Error fetching notes:\", err);\n      setNoteError(\"An error occurred while fetching notes.\");\n      setNotlar([]); // Set notlar to an empty array\n    }\n  };\n  useEffect(() => {\n    fetchNotes(); // Initial fetch when component mounts\n\n    // Polling - Fetch notes every 5 seconds\n    const intervalId = setInterval(fetchNotes, 1000);\n\n    // Clean up function to clear interval when component unmounts\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"not-form\",\n      children: /*#__PURE__*/_jsxDEV(NoteForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notlar\",\n      children: notlar && notlar.map(item => /*#__PURE__*/_jsxDEV(NotesDetail, {\n        note: item\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"caNXEuar/Jx1p5WA2xVlrVswUlA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","NotesDetail","NoteForm","jsxDEV","_jsxDEV","Home","_s","notlar","setNotlar","noteError","setNoteError","fetchNotes","response","fetch","responseData","json","ok","data","message","err","console","error","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","note","_id","_c","$RefreshReg$"],"sources":["/Users/apple/Downloads/fullstack_mern_notepad_app-main/frontend/src/pages/home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NotesDetail from \"../components/notes-detail\";\nimport NoteForm from \"../components/note-form\";\n\nconst Home = () => {\n  const [notlar, setNotlar] = useState(null);\n  const [noteError, setNoteError] = useState();\n\n  // Function to fetch notes\n  const fetchNotes = async () => {\n    try {\n      const response = await fetch(\"/api/v1/notes\");\n      const responseData = await response.json(); // Extract JSON data from response\n\n      if (response.ok) {\n        setNotlar(responseData.data); // Set notlar state with the data array\n      } else {\n        setNoteError(\n          responseData.message || \"An error occurred while fetching notes.\"\n        );\n        setNotlar([]); // Set notlar to an empty array\n      }\n    } catch (err) {\n      console.error(\"Error fetching notes:\", err);\n      setNoteError(\"An error occurred while fetching notes.\");\n      setNotlar([]); // Set notlar to an empty array\n    }\n  };\n\n  useEffect(() => {\n    fetchNotes(); // Initial fetch when component mounts\n\n    // Polling - Fetch notes every 5 seconds\n    const intervalId = setInterval(fetchNotes, 1000);\n\n    // Clean up function to clear interval when component unmounts\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <div className=\"not-form\">\n        <NoteForm />\n      </div>\n      <div className=\"notlar\">\n        {notlar &&\n          notlar.map((item) => <NotesDetail key={item._id} note={item} />)}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,QAAQ,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC;;EAE5C;EACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;;MAE5C,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfR,SAAS,CAACM,YAAY,CAACG,IAAI,CAAC,CAAC,CAAC;MAChC,CAAC,MAAM;QACLP,YAAY,CACVI,YAAY,CAACI,OAAO,IAAI,yCAC1B,CAAC;QACDV,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CT,YAAY,CAAC,yCAAyC,CAAC;MACvDF,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC,CAAC,CAAC;;IAEd;IACA,MAAMW,UAAU,GAAGC,WAAW,CAACZ,UAAU,EAAE,IAAI,CAAC;;IAEhD;IACA,OAAO,MAAMa,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBtB,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBtB,OAAA,CAACF,QAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACN1B,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBnB,MAAM,IACLA,MAAM,CAACwB,GAAG,CAAEC,IAAI,iBAAK5B,OAAA,CAACH,WAAW;QAAgBgC,IAAI,EAAED;MAAK,GAArBA,IAAI,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9CID,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAgDV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}